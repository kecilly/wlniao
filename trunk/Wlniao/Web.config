<?xml version="1.0"?>
<configuration>
  <configSections>
    <!--<section name="daabProviders" type="GotDotNet.ApplicationBlocks.Data.DAABSectionHandler, GotDotNet.ApplicationBlocks.Data"></section>-->
    <!--spring节点-->
    <sectionGroup name="spring">
      <section name="context" type="Spring.Context.Support.WebContextHandler, Spring.Web"/>
      <!--<section name="objects" type="Spring.Context.Support.DefaultSectionHandler, Spring.Core"/>-->
      <section name="parsers" type="Spring.Context.Support.NamespaceParsersSectionHandler, Spring.Core"/>
    </sectionGroup>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
    <!-- 数据库的配置参数 -->
    <section name="databaseSettings" type="System.Configuration.NameValueSectionHandler"/>
  </configSections>
  <!--log4net-->
  <log4net>
    <root>
      <level value="ALL"/>
      <appender-ref ref="SysAppender"/>
    </root>
    <!-- Print only messages of level DEBUG or above in the packages -->
    <logger name="WebLogger">
      <level value="ALL"/>
      <appender-ref ref="SysAppender"/>
    </logger>
    <!--定义输出到文件中-->
    <appender name="SysAppender" type="log4net.Appender.RollingFileAppender,log4net">
      <param name="File" value="log/"/>
      <!--是追加还是覆盖文件，true则为追加；false为覆盖-则每次打开程序都会把原来的日志信息删除-->
      <param name="AppendToFile" value="true"/>
      <param name="RollingStyle" value="Date"/>
      <param name="DatePattern" value="&quot;Logs_&quot;yyyyMMdd&quot;.txt&quot;"/>
      <!--名称是否可以更改，false为可以更改-->
      <param name="StaticLogFileName" value="false"/>
      <layout type="log4net.Layout.PatternLayout,log4net">
        <!--输出格式-->
        <param name="ConversionPattern" value="%d [%t] %-5p  %m%n"/>
      </layout>
    </appender>
    <!--定义输出到控制台命令行中-->
    <appender name="consoleApp" type="log4net.Appender.ConsoleAppender,log4net">
      <layout type="log4net.Layout.PatternLayout,log4net">
        <param name="ConversionPattern" value="%d [%t] %-5p %c - %m%n"/>
      </layout>
    </appender>
  </log4net>
  <!--spring-->
  <spring>
    <context>
      <!--Dao-->
      <resource uri="assembly://Shijia.Dao/Shijia.Dao.Config/dataAccess.xml"/>
      <resource uri="assembly://Shijia.Dao/Shijia.Dao.Config/objects.xml"/>
      <!--Service-->
      <resource uri="assembly://Shijia.Service/Shijia.Service.Config/objects.xml"/>
      <resource uri="assembly://Shijia.Service/Shijia.Service.Config/ServiceBase.xml"/>
      <!--Web-->
      <resource uri="assembly://Wlniao/Wlniao.Config/Controllers.xml"/>
      <!--Xcode-->
      <!--
      <resource uri="assembly://XCore/System.Config/objects.xml" />
      <resource uri="assembly://XCore/System.Config/ServiceBase.xml" />
      <resource uri="assembly://XCore/System.Config/Controllers.xml" />-->
    </context>
  </spring>
  <!--databaseSettings-->
  <databaseSettings>
    <!--SQL Server-->
    <!--local-->
    <add key="provider" value="System.Data.SqlClient"/>
    <add key="connectionString" value="Data Source=GEORGE-THINK;Initial Catalog=ShijiaWeixin;Integrated Security=True"/>
    <add key="dialect" value="NHibernate.Dialect.MsSql2008Dialect"/>
    <add key="driver_class" value="NHibernate.Driver.SqlClientDriver"/>
    <!--SQLite-->
    <!--<add key="provider" value="System.Data.SQLite" />
    <add key="connectionString" value="Data Source=|DataDirectory|DataBase.db;Version=3;FailIfMissing=False;" />
    <add key="dialect" value="NHibernate.Dialect.SQLiteDialect" />
    <add key="driver_class" value="NHibernate.Driver.SQLite20Driver" />-->
    <!--自动建表-->
    <add key="hbm2ddl.auto" value="update"/>
  </databaseSettings>
  <appSettings>
    <add key="Spring.Data.NHibernate.Support.OpenSessionInViewModule.SessionFactoryObjectName" value="NHibernateSessionFactory"/>
    <!--<add key="IsDebug" value="true"/>-->
  </appSettings>
  <system.web>
    <!--<httpRuntime requestValidationMode="2.0" maxRequestLength="49600" executionTimeout="500"/>-->
    <compilation debug="true" targetFramework="4.0"/>
    <!--<sessionState mode="InProc" customProvider="XCoreSessionProvider">
      <providers>
        <add name="XCoreSessionProvider" type="System.XCoreSessionStateStore"/>
      </providers>
    </sessionState>-->
    <httpModules>
      <add name="Spring" type="Spring.Context.Support.WebSupportModule, Spring.Web"/>
      <!-- 
          由 Spring 自动打开会话，必须提供一个名为 SessionFactory 的会话工厂 
          使用后，可以使用 SessionFactory 的 GetCurrentSession 方法获取会话
      -->
      <add name="OpenSessionInView" type="Spring.Data.NHibernate.Support.OpenSessionInViewModule, Spring.Data.NHibernate32"/>
    </httpModules>
    <!--<httpHandlers>
      -->
    <!-- Spring 提供的处理程序 -->
    <!--
      <add verb="*" path="*.aspx" type="Spring.Web.Support.PageHandlerFactory, Spring.Web"/>
      -->
    <!-- 取消 Spring.NET 对于 Web 服务的处理 -->
    <!--
      -->
    <!--<add verb="*" path="*.asmx" type="Spring.Web.Services.WebServiceHandlerFactory, Spring.Web"/>-->
    <!--
      <add verb="*" path="ContextMonitor.ashx" type="Spring.Web.Support.ContextMonitor, Spring.Web"/>
      <add verb="*" path="*.ashx" type="Spring.Web.Support.DefaultHandlerFactory, Spring.Web"/>
    </httpHandlers>-->
    <!--显示错误-->
    <customErrors mode="Off"/>
    <!--<pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID"/>-->
    <httpHandlers>
      <!-- Spring 提供的处理程序 -->
      <add verb="*" path="*.aspx" type="Spring.Web.Support.PageHandlerFactory, Spring.Web"/>
      <!-- 取消 Spring.NET 对于 Web 服务的处理 -->
      <!--<add verb="*" path="*.asmx" type="Spring.Web.Services.WebServiceHandlerFactory, Spring.Web"/>-->
      <add verb="*" path="ContextMonitor.ashx" type="Spring.Web.Support.ContextMonitor, Spring.Web"/>
      <add verb="*" path="*.ashx" type="Spring.Web.Support.DefaultHandlerFactory, Spring.Web"/>
    </httpHandlers>
    <trust level="Full"/>
    <httpRuntime/>
    <pages controlRenderingCompatibilityVersion="4.0"/>
  </system.web>
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false"/>
    <modules runAllManagedModulesForAllRequests="true">
      <add name="OpenSessionInView" type="Spring.Data.NHibernate.Support.OpenSessionInViewModule, Spring.Data.NHibernate32"/>
    </modules>
  </system.webServer>
</configuration>